<?php
/**
 * Functions to enqueue styles and scripts.
 *
 * @package WordPress
 */

/**
 * Function to conditionally enqueue the Vue Single Page App based on the WordPress Custom Page Template.
 *
 * This is done by enqueueing the Vue build script generated by Webpack.
 */
function wa_mapvuespa_enqueue_spa_scripts() {
	global $post;

	$_options_identity_label = [
		'agriculture_biologique'    => __( 'Agriculture Biologique', 'wa-rsfp' ),
		'demeter' 		            => __( 'Demeter', 'wa-rsfp' ),
		'bio_coherence' 		    => __( 'Bio Cohérence', 'wa-rsfp' ),
		'nature_progres' 		    => __( 'Nature & Progrès', 'wa-rsfp' ),
		'label_rouge' 		        => __( 'Label Rouge', 'wa-rsfp' ),
		'aop' 		                => __( 'AOP', 'wa-rsfp' ),
		'igp' 		                => __( 'IGP', 'wa-rsfp' ),
		'stg' 		                => __( 'STG', 'wa-rsfp' ),
	];

	$options_identity_label = array();

	foreach ($_options_identity_label as $key => $label) {
        // Each entry is an associative array representing an object
        $options_identity_label[] = ['value' => $key, 'label' => $label, 'term' => 'label'];
    }

	// Get metabox io label options
	// $d_identity_label   		= rwmb_get_field_settings( 'd_identity_label' );
	// $options_identity_label 	= $d_identity_label['options'];
	// error_log('MetaBox ???.');


	// if (function_exists('rwmb_get_field_settings')) {
    //     $field_settings = rwmb_get_field_settings('d_identity_label');
    //     error_log(print_r($field_settings, true));  // Check the server error log to see the output
    // } else {
    //     error_log('MetaBox is not available.');
    // }

	// if ( is_page_template( 'templates/vue-search-app-template.php' ) ) { // Child template way
	// Return default template if we don't have a custom one defined
	if ( '../templates/vue-search-app-template.php' == get_post_meta(  $post->ID, '_wp_page_template', true ) ) { // Plugin way

		// register the Vue build script.
		wp_register_script( // the app build script generated by Webpack.
			'vue_search_app',
			//'http://localhost:5173/dist/build.js', // for development: 'http://localhost:5173/dist/build.js'.
			//plugin_dir_url( __DIR__ )  . '/spa/dist/build.js', // for development: 'http://localhost:8080/dist/build.js'.
			plugin_dir_url( __DIR__ )  . '/spa3/dist/build.js', // for development: 'http://localhost:8080/dist/build.js'.
			array(),
			false,
			true
		);

		// make custom data available to the Vue app with wp_localize_script.
		global $post;
		wp_localize_script(
			'vue_search_app', // vue script handle.
			'wpData', // javascript object.
			array( // WordPress data to be made available to the Vue app.
				'template_directory_uri' => plugin_dir_url( __DIR__ ) ,
				'rest_url' => untrailingslashit( esc_url_raw( rest_url() ) ), // URL to the REST endpoint.
				'app_path' => $post->post_name, // page where the custom page template is loaded.
				// Default
				'post_categories' => get_terms( array( // default post categories.
					'taxonomy' => array('category', 'geography'),
					'hide_empty' => true,
					'fields' => 'names',
				) ),
				// Directory
				'geography' => get_terms( array(
					'taxonomy' => array('geography'),
					'hide_empty' => true,
					'fields' => 'names',
				) ),
				'production' => get_terms( array(
					'taxonomy' => array('production'),
					'hide_empty' => true,
					'fields' => 'names',
				) ),
				'thematic' => get_terms( array(
					'taxonomy' => array('thematic'),
					'hide_empty' => true,
					'fields' => 'names',
				) ),
				// Metas
				'label' => $options_identity_label,
				)
		);

		// enqueue the Vue app script with localized data.
		wp_enqueue_script( 'vue_search_app' );
	}
}
